{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FormationService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get('http://localhost:8015/api/formations');\n  }\n  getById(id) {\n    return this.http.get(`http://localhost:8015/api/formations/${id}`);\n  }\n  delete(id) {\n    return this.http.delete(`http://localhost:8015/api/formations/${id}`);\n  }\n  merge(formation) {\n    return this.http.put('http://localhost:8015/api/formations', formation);\n  }\n}\nFormationService.ɵfac = function FormationService_Factory(t) {\n  return new (t || FormationService)(i0.ɵɵinject(i1.HttpClient));\n};\nFormationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FormationService,\n  factory: FormationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAG3BC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAM;IAEJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAc,sCAAsC,CAAC;EAC3E;EAEAC,OAAO,CAACC,EAAS;IAEf,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAY,wCAAwCE,EAAE,EAAE,CAAC;EAC/E;EAEAC,MAAM,CAACD,EAAS;IAEd,OAAO,IAAI,CAACJ,IAAI,CAACK,MAAM,CAAY,wCAAwCD,EAAE,EAAE,CAAC;EAClF;EAEAE,KAAK,CAACC,SAAmB;IAEvB,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAY,sCAAsC,EAAED,SAAS,CAAC;EACpF;;AAvBWT,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAW,SAAhBX,gBAAgB;EAAAY,YAFf;AAAM","names":["FormationService","constructor","http","getAll","get","getById","id","delete","merge","formation","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\goutm\\Desktop\\angular\\gestionformationfront\\src\\app\\services\\formation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Formation } from '../models/formation';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormationService {\r\n\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getAll()\r\n  {\r\n    return this.http.get<Formation[]>('http://localhost:8015/api/formations')\r\n  }\r\n\r\n  getById(id:number)\r\n  {\r\n    return this.http.get<Formation>(`http://localhost:8015/api/formations/${id}`)\r\n  }\r\n\r\n  delete(id:number)\r\n  {\r\n    return this.http.delete<Formation>(`http://localhost:8015/api/formations/${id}`) \r\n  }\r\n\r\n  merge(formation:Formation)\r\n  {\r\n    return this.http.put<Formation>('http://localhost:8015/api/formations', formation) \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}