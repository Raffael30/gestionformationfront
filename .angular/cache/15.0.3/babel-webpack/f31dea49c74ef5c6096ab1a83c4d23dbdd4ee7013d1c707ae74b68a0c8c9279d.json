{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthenticateGuard {\n  constructor(route) {\n    this.route = route;\n  }\n  canActivate(route, state) {\n    //check some condition\n    if (sessionStorage.getItem('utilisateur') == null) {\n      this.route.navigateByUrl('connexion');\n      return false;\n    }\n    return true;\n  }\n}\nAuthenticateGuard.ɵfac = function AuthenticateGuard_Factory(t) {\n  return new (t || AuthenticateGuard)(i0.ɵɵinject(i1.Router));\n};\nAuthenticateGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticateGuard,\n  factory: AuthenticateGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,iBAAiB;EAY5BC,YAAoBC,KAAa;IAAb,UAAK,GAALA,KAAK;EAAa;EAEtCC,WAAW,CAACD,KAA6B,EAAEE,KAA0B;IAEnE;IACA,IAAIC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE;MAEjD,IAAI,CAACJ,KAAK,CAACK,aAAa,CAAC,WAAW,CAAC;MACrC,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;;AAvBWP,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAQ,SAAjBR,iBAAiB;EAAAS,YAFhB;AAAM","names":["AuthenticateGuard","constructor","route","canActivate","state","sessionStorage","getItem","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\goutm\\Desktop\\angular\\gestionformationfront\\src\\app\\authenticate.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Utilisateur } from './models/utilisateur';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticateGuard implements CanActivate {\r\n\r\n\r\n  /*par d�faut\r\n    canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return true;\r\n  }*/\r\n\r\n\r\n  utilisateur!: Utilisateur\r\n  constructor(private route: Router) {  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    //check some condition\r\n    if (sessionStorage.getItem('utilisateur') == null) {\r\n\r\n      this.route.navigateByUrl('connexion');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}