{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class InterceptorService {\n  intercept(httpRequest, next) {\n    if (sessionStorage.getItem('token')) {\n      let auth = sessionStorage.getItem('token') ?? \"\";\n      httpRequest = httpRequest.clone({\n        setHeaders: {\n          Authorization: auth\n        }\n      });\n    }\n    return next.handle(httpRequest);\n  }\n}\nInterceptorService.ɵfac = function InterceptorService_Factory(t) {\n  return new (t || InterceptorService)();\n};\nInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterceptorService,\n  factory: InterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,kBAAkB;EAC7BC,SAAS,CAACC,WAA6B,EAAEC,IAAiB;IACxD,IAAKC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAClC,IAAIC,IAAI,GAACF,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,IAAG,EAAE;MAC7CH,WAAW,GAACA,WAAW,CAACK,KAAK,CAAC;QAC1BC,UAAU,EAAC;UACPC,aAAa,EAAEH;;OAEpB,CAAC;;IAKR,OAAOH,IAAI,CAACO,MAAM,CAACR,WAAW,CAAC;EAEjC;;AAfWF,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAW,SAAlBX,kBAAkB;EAAAY,YADL;AAAM","names":["InterceptorService","intercept","httpRequest","next","sessionStorage","getItem","auth","clone","setHeaders","Authorization","handle","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\goutm\\Desktop\\angular\\gestionformationfront\\src\\app\\services\\interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InterceptorService implements HttpInterceptor {\r\n  intercept(httpRequest: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if ( sessionStorage.getItem('token')) {\r\n        let auth=sessionStorage.getItem('token')?? \"\";\r\n        httpRequest=httpRequest.clone({\r\n            setHeaders:{\r\n                Authorization: auth\r\n            }\r\n          })\r\n         \r\n       \r\n  \r\n    }\r\n    return next.handle(httpRequest);\r\n  \r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}