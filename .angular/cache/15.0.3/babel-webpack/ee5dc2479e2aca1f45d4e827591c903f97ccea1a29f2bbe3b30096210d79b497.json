{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/authentification.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nfunction AuthentificationComponent_p_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.messageErreur);\n  }\n}\nexport class AuthentificationComponent {\n  constructor(authentificationService, route, http) {\n    this.authentificationService = authentificationService;\n    this.route = route;\n    this.http = http;\n  }\n  ngOnInit() {\n    this.messageErreur = '';\n  }\n  connexion() {\n    this.authentificationService.authenticate(this.username, this.password).subscribe(response => {\n      sessionStorage.setItem('token', \"Bearer \" + response.jwt);\n      this.authentificationService.findByUsername(this.username).subscribe(response2 => {\n        this.utilisateur = response2;\n        sessionStorage.setItem('utilisateur', JSON.stringify(this.utilisateur));\n        this.route.navigateByUrl(\"utilisateurs\");\n      });\n    }, error => {\n      this.messageErreur = \"Erreur de connexion\";\n      this.route.navigateByUrl(\"connexion\");\n    });\n  }\n  infor(f) {\n    this.connexion();\n  }\n}\nAuthentificationComponent.ɵfac = function AuthentificationComponent_Factory(t) {\n  return new (t || AuthentificationComponent)(i0.ɵɵdirectiveInject(i1.AuthentificationService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HttpClient));\n};\nAuthentificationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthentificationComponent,\n  selectors: [[\"app-authentification\"]],\n  decls: 19,\n  vars: 3,\n  consts: [[1, \"text-center\", \"my-3\"], [1, \"container\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"text-center\"], [1, \"mb-3\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mb-3\", \"text-center\"], [\"type\", \"submit\", \"value\", \"Envoyer\", 1, \"btn\", \"btn-primary\"], [4, \"ngIf\"]],\n  template: function AuthentificationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Connexion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthentificationComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.infor(_r0));\n      });\n      i0.ɵɵelementStart(5, \"fieldset\")(6, \"legend\", 4);\n      i0.ɵɵtext(7, \"Formulaire de connexion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Nom d'utilisateur\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthentificationComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 8);\n      i0.ɵɵtext(14, \"Mot de passe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthentificationComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 10);\n      i0.ɵɵelement(17, \"input\", 11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(18, AuthentificationComponent_p_18_Template, 2, 1, \"p\", 12);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.messageErreur != \"\");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IA2BIA,yBAA6B;IAAAA,YAAiB;IAAAA,iBAAI;;;;IAArBA,eAAiB;IAAjBA,0CAAiB;;;ACdlD,OAAM,MAAOC,yBAAyB;EAOpCC,YAAoBC,uBAAgD,EAAUC,KAAa,EAAUC,IAAgB;IAAjG,4BAAuB,GAAvBF,uBAAuB;IAAmC,UAAK,GAALC,KAAK;IAAkB,SAAI,GAAJC,IAAI;EAAgB;EAEzHC,QAAQ;IACN,IAAI,CAACC,aAAa,GAAG,EAAE;EACzB;EAEAC,SAAS;IACP,IAAI,CAACL,uBAAuB,CAACM,YAAY,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;MAE3FC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAE,SAAS,GAAGF,QAAQ,CAACG,GAAG,CAAC;MAEzD,IAAI,CAACb,uBAAuB,CAACc,cAAc,CAAC,IAAI,CAACP,QAAQ,CAAC,CAACE,SAAS,CAACM,SAAS,IAAG;QAC/E,IAAI,CAACC,WAAW,GAAGD,SAAS;QAC5BJ,cAAc,CAACC,OAAO,CAAC,aAAa,EAAEK,IAAI,CAACC,SAAS,CAAC,IAAI,CAACF,WAAW,CAAC,CAAC;QAEvE,IAAI,CAACf,KAAK,CAACkB,aAAa,CAAC,cAAc,CAAC;MAC1C,CAAC,CAAC;IAEJ,CAAC,EACCC,KAAK,IAAG;MACN,IAAI,CAAChB,aAAa,GAAG,qBAAqB;MAC1C,IAAI,CAACH,KAAK,CAACkB,aAAa,CAAC,WAAW,CAAC;IACvC,CAAC,CAAC;EACN;EAEAE,KAAK,CAACC,CAAS;IACb,IAAI,CAACjB,SAAS,EAAE;EAClB;;AAlCWP,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDbtC9B,6BAA6B;MAAAA,yBAAS;MAAAA,iBAAK;MAE3CA,8BAAuB;MAEDA;QAAAA;QAAA;QAAA,OAAYA,6BAAQ;MAAA,EAAC;MAEnCA,gCAAU;MACsBA,uCAAuB;MAAAA,iBAAS;MAE5DA,8BAAkB;MACQA,kCAAiB;MAAAA,iBAAQ;MAC/CA,iCAA+F;MAAzBA;QAAA;MAAA,EAAsB;MAA5FA,iBAA+F;MAGnGA,+BAAkB;MACQA,6BAAY;MAAAA,iBAAQ;MAC1CA,iCAAmG;MAAzBA;QAAA;MAAA,EAAsB;MAAhGA,iBAAmG;MAGvGA,gCAA8B;MAC1BA,6BAA+D;MACnEA,iBAAM;MAMdA,yEAAkD;MACtDA,iBAAM;;;MAjBgFA,gBAAsB;MAAtBA,sCAAsB;MAKlBA,eAAsB;MAAtBA,sCAAsB;MAWxGA,eAAuB;MAAvBA,8CAAuB","names":["i0","AuthentificationComponent","constructor","authentificationService","route","http","ngOnInit","messageErreur","connexion","authenticate","username","password","subscribe","response","sessionStorage","setItem","jwt","findByUsername","response2","utilisateur","JSON","stringify","navigateByUrl","error","infor","f","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\goutm\\Desktop\\angular\\gestionformationfront\\src\\app\\authentification\\authentification.component.html","C:\\Users\\goutm\\Desktop\\angular\\gestionformationfront\\src\\app\\authentification\\authentification.component.ts"],"sourcesContent":["<h1 class=\"text-center my-3\">Connexion</h1>\r\n\r\n<div class=\"container\">\r\n\r\n    <form #f=\"ngForm\" (ngSubmit)=\"infor(f)\">\r\n\r\n        <fieldset>\r\n            <legend class=\"text-center\">Formulaire de connexion</legend>\r\n\r\n            <div class=\"mb-3\">\r\n                <label for=\"username\">Nom d'utilisateur</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" [(ngModel)]=\"username\" />\r\n            </div>\r\n\r\n            <div class=\"mb-3\">\r\n                <label for=\"password\">Mot de passe</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" />\r\n            </div>\r\n\r\n            <div class=\"mb-3 text-center\">\r\n                <input class=\"btn btn-primary\" type=\"submit\" value=\"Envoyer\" />\r\n            </div>\r\n\r\n        </fieldset>\r\n\r\n    </form>\r\n\r\n    <p *ngIf=\"messageErreur!=''\">{{messageErreur}}</p>\r\n</div>","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Utilisateur } from 'src/app/models/utilisateur';\r\n\r\nimport { AuthentificationService } from 'src/app/services/authentification.service';\r\n\r\n@Component({\r\n  selector: 'app-authentification',\r\n  templateUrl: './authentification.component.html',\r\n  styleUrls: ['./authentification.component.scss']\r\n})\r\nexport class AuthentificationComponent implements OnInit {\r\n\r\n  username!: string;\r\n  password!: string;\r\n  utilisateur!: Utilisateur;\r\n  messageErreur!: string;\r\n\r\n  constructor(private authentificationService: AuthentificationService, private route: Router, private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.messageErreur = '';\r\n  }\r\n\r\n  connexion() {\r\n    this.authentificationService.authenticate(this.username, this.password).subscribe(response => {\r\n\r\n      sessionStorage.setItem('token', \"Bearer \" + response.jwt);\r\n\r\n      this.authentificationService.findByUsername(this.username).subscribe(response2 => {\r\n        this.utilisateur = response2;\r\n        sessionStorage.setItem('utilisateur', JSON.stringify(this.utilisateur));\r\n\r\n        this.route.navigateByUrl(\"utilisateurs\");\r\n      })\r\n\r\n    },\r\n      error => {\r\n        this.messageErreur = \"Erreur de connexion\";\r\n        this.route.navigateByUrl(\"connexion\");\r\n      });\r\n  }\r\n\r\n  infor(f: NgForm) {\r\n    this.connexion();\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}